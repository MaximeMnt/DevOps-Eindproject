---
    - hosts: all
      remote_user: root
      become_method: sudo
      become_user: root
      tasks:
      - name: updaten van machines
        apt:
            name: '*'
            state: latest

      - name: Installeren Git
        apt:
          name: git
          state: latest
      
      - name: installeren docker
        apt:
          name: docker.io
          state: latest
      
      # - name: install Curl
      #   apt:
      #     name: curl
      #     state: latest

      - name: download nodejs
        get_url:
          url: "https://deb.nodesource.com/setup_12.x"
          dest: "/root/.ansible/installnodejs"
      
      - name: instellen van permissions
        file:
          path: /root/.ansible/installnodejs
          mode: u+x

      - name: uitvoeren van script
        shell: /root/.ansible/installnodejs


      - name: install nodejs
        apt:
          name: nodejs
          state: present
          update_cache: yes

      - name: rmv script
        file:
          path: /root/.ansible/installnodejs
          state: absent

      # - name: installeren npm
      #   apt:
      #     name: npm
      #     state: latest
      
      - name: Installeren Dotnet SDK 3.1
        command:
          cmd: wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      
      - name: Installeren van package packages-microsoft-prod.deb
        command:
          cmd: dpkg -i packages-microsoft-prod.deb
    
      - name: installeren van ASP.NET core runtime
        command:
          cmd: add-apt-repository universe 

      - name: get update
        apt:
          name: '*'
          state: latest
      
      - name: install apt-transport-https
        apt:
          name: apt-transport-https
          state: latest

      - name: get update
        apt:
          name: '*'
          state: latest
        
      - name: install dotnet-sdk
        apt:
          name: dotnet-sdk-3.1
          state: latest

      # - name: install sql server
      #   command:
      #     cmd: wget -qO- https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

      # - name: register ms sql server repo
      #   command:
      #     cmd: add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)"

      # - name: get update
      #   apt:
      #     name: '*'
      #     state: latest

      # - name: install mssql
      #   apt:
      #     name: mssql-server
      #     state: latest
 #◘-----------TEMP-----------
      #Downloaden van file
      - name: checken als folder bestaat
        stat: path=/home/ansible/cloudapis
        register: stat_result
      
      - name: remove folder
        file:
          path: /home/ansible/cloudapis
          state: absent
          #when: stat_result.stat.exists
     
      - name: download repo van github
        command:
          cmd:  git clone https://github.com/MaximeMnt/DevOps-Eindproject.git /home/ansible/cloudapis

      - name: dotnet restore
        command:
          cmd: dotnet restore /home/ansible/cloudapis/RESTful-API-MaximeMinta-v2

      - name: dotnet build
        command:
          cmd: dotnet build /home/ansible/cloudapis/RESTful-API-MaximeMinta-v2
#◘-----------TEMP-----------
      # - name: dotnet run
      #   command:
      #     cmd: dotnet run --project /home/ansible/cloudapis/RESTful-API-MaximeMinta-v2/RESTful API MaximeMinta-v2

      - name: installeren screen
        apt:
          name: screen
          state: latest
      
      - name: installen permissions
        file:
          path: /home/ansible/cloudapis/dotnetRun.sh
          mode: u+x

      - name: dotnet run
        shell: /home/ansible/cloudapis/dotnetRun.sh
        


        #-----------TODO: DOTNET builden, sql server installeren, dotnet deployen met sql server---------------


      # - name: installeren sql server
      #   apt:
      #     name: mysql-server
      #     state: latest
      
      # - name: allow remote access
      #   command:
      #     cmd: ufw allow mysql
      
      # - name: start mysql
      #   command:
      #     cmd: systemctl start mysql

      # - name: launch at reboot
      #   command:
      #     cmd: systemctl enable mysql

#-----------------VERWIJDEREN------------------------------------
      # - name: Create db container and connect to network
      #   docker_container:
      #     name: SongLibraryDB
      #     image: "mysql:latest"
      #     networks:
      #       - name: TestingNet
      #         ipv4_address: "172.1.1.100"
      #         aliases:
      #           - database
#-----------------VERWIJDEREN------------------------------------
      #CLIENT APPLICATIE

      #---------------------------TEMP-----------------------------------------
      # - name: installeren van angular cli
      #   npm:
      #     name: angular-cli
      #     global: yes
      #     version: latest  
      
      
      - name: installeren van packages in package.json
        npm:
          path: /home/ansible/cloudapis/CLIENT/musicclient
      
      - name: builden van project
        command: 
          chdir: /home/ansible/cloudapis/CLIENT/musicclient
          cmd: npm run-script build


      - name: installeren van apache
        apt:
          name: apache2
          state: latest
      
      - name: stoppen van apache
        command: systemctl stop apache2
      
      - name: verwijderen van html directory
        file: 
          path: /var/www/html
          state: absent

      - name: verplaatsten van angular files
        command: mv /home/ansible/cloudapis/CLIENT/musicclient/dist/ /var/www/html

      # - name: verwijderen van html directory
      #   file: 
      #     path: /var/www/html
      #     state: absent


      - name: starten van apache2
        command: systemctl start apache2

      
          


